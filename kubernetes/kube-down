#!/bin/zsh
autoload colors
colors

APP=$0
K8S="std"

usage() {
  echo -e
  echo -e "Usage: $APP [options]"
  echo -e
  echo -e "Deletes Taktzeit from the selected Kubernetes cluster. Three types are supported:"
  echo -e "  * AWS EKS (eks)"
  echo -e "  * Azure AKS (aks)"
  echo -e "  * Standard (std)"
  echo -e
  echo -e "Defaults to the standard (local) Kubernetes cluster if no type is chosen"
  echo -e
  echo -e "Options:"
  echo -e "  -t | --type <aks|eks|std> If empty, defaults to std"
  echo -e "  -h | --help displays usage information"
  echo -e
  exit 1
}

while [[ $# -gt 0 ]]
do
  case $1 in
    -t|--type)
      K8S="$2"
      shift
      shift;;
    -h|--help)
      usage;;
    *)
      echo -e "$fg_bold[red]Invalid option: $fg_bold[yellow]$1$reset_color"
      usage;;
  esac
done

if [[ $K8S != "aks" ]] && [[ $K8S != "eks" ]] && [[ $K8S != "std" ]]
then
  echo -e "$fg_bold[red]Invalid option: $fg_bold[yellow]$K8S$reset_color"
  echo -e "$fg_bold[yellow]Valid choices are one of $fg_bold[green]aks$fg_bold[yellow], $fg_bold[green]eks$fg_bold[yellow] or $fg_bold[green]std$reset_color"
  usage
fi

echo -e "\n$fg_bold[red]Deleting Ingress service$reset_color"
if [[ $K8S == "aks" ]]
then
  kubectl delete -f aks-ingress-service.yml
else
  kubectl delete -f nginx-ingress-service.yml
fi

echo -e "\n$fg_bold[red]Deleting CLIENT service$reset_color"
kubectl delete -f client-cluster-ip.yml -f client-deployment.yml
echo -e "\n$fg_bold[red]Deleting API service$reset_color"
kubectl delete -f api-cluster-ip.yml -f api-deployment.yml
echo -e "\n$fg_bold[red]Deleting WORKER horizontal pod autoscaler$reset_color"
kubectl delete -f worker-hpa.yml
echo -e "\n$fg_bold[red]Deleting WORKER service$reset_color"
kubectl delete -f worker-deployment.yml
echo -e "\n$fg_bold[red]Deleting Postgres$reset_color"
kubectl delete -f postgres-cluster-ip.yml -f postgres-deployment.yml

echo -e "\n$fg_bold[yellow]Delete Peristent Volume Claim? (y/n)$reset_color"
read ANSWER
if [[ $ANSWER = "y" ]]
then
  echo -e "\n$fg_bold[red]Deleting Peristent Volume Claim$reset_color"
  if [[ $K8S == "eks" ]]
  then
      kubectl delete -f eks-database-pvc.yml
  else
      kubectl delete -f database-pvc.yml
  fi
fi

echo -e "\n$fg_bold[red]Deleting Redis$reset_color"
kubectl delete -f redis-cluster-ip.yml -f redis-deployment.yml
echo -e "\n$fg_bold[red]Deleting RabbitMQ$reset_color"
kubectl delete -f rabbitmq-cluster-ip.yml -f rabbitmq-deployment.yml
echo -e "\n$fg_bold[red]Deleting Secrets$reset_color"
kubectl delete -f secrets-vault.yml
echo -e "\n$fg_bold[red]Deleting taktzeit namespace$reset_color"
kubectl label namespace taktzeit istio-injection-
kubectl delete -f taktzeit-namespace.yml
echo -e "\n$fg_bold[red]Finished deleting Taktzeit$reset_color\n"
