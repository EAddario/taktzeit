#!/bin/zsh
autoload colors
colors

APP=$0
HOST="localhost"
ITERATIONS=50
OPTION="rep"
PAUSE=0
VALUE=10

usage() {
    echo -e
    echo -e "Usage: $APP [options]"
    echo -e
    echo -e "Generates a test load for the Takzeit system"
    echo -e
    echo -e "Two modes of operation are available: rep and seq"
    echo -e "   rep: Repeats the same value for each POST call. Defaults are $ITERATIONS iterations with value $VALUE"
    echo -e "   seq: Cycles a number of times (default is $ITERATIONS) through a sequence from 0 to $(($VALUE - 1)) (value - 1)"
    echo -e
    echo -e "Options:"
    echo -e "  -h | --help displays usage information"
    echo -e "  -i | --iterations <integer> If empty, defaults to $ITERATIONS"
    echo -e "  -o | --option <rep|seq> If empty, defaults to rep"
    echo -e "  -p | --pause <milliseconds> If empty, defaults to $PAUSE milliseconds"
    echo -e "  -s | --server <domain|ip> If empty, defaults to localhost"
    echo -e "  -v | --value <integer> If empty, defaults to $VALUE"
    echo -e
    exit 1
}

while [[ $# -gt 0 ]]
do
  case $1 in
    -h | --help)
          usage;;
    -i | --iterations)
          ITERATIONS="$2"
          shift
          shift;;
    -o | --option)
      OPTION="$2"
      shift
      shift;;
    -p | --pause)
          PAUSE=$(echo "scale=2; $2 / 1000" | bc -l)
          shift
          shift;;
    -s | --server)
          HOST="$2"
          shift
          shift;;
    -v | --value)
      VALUE="$2"
      shift
      shift;;
    *)
      echo -e "$fg_bold[red]Invalid option: $fg_bold[yellow]$1$reset_color"
      usage;;
  esac
done

if [[ "$OPTION" != "rep" ]] && [[ "$OPTION" != "seq" ]]
then
  echo -e "$fg_bold[red]Invalid option: $fg_bold[yellow]$OPTION$reset_color"
  echo -e "$fg_bold[yellow]Valid choices are one of rep or seq$reset_color"
  usage
fi

case $OPTION in
  "seq")
    echo "$fg_bold[yellow]Sequence: iterating $ITERATIONS times values 0..$(($VALUE - 1)) with $PAUSE seconds pause$reset_color"
    for i in {1..$ITERATIONS}
    do
      echo "$fg_bold[red]Request $i$reset_color"
      curl --request POST "$HOST/api/values" --header 'Content-Type: application/json' --data-raw '{"index":"'$(($i % $VALUE))'"}'; echo " ("$(($i % $VALUE))")"
      sleep $PAUSE
    done
    ;;
  "rep")
    echo "$fg_bold[yellow]Repeat: issuing $ITERATIONS request(s) for value $VALUE with $PAUSE seconds pause$reset_color"
    for i in {1..$ITERATIONS}
    do
      echo "$fg_bold[red]Request $i$reset_color"
      curl --request POST "$HOST/api/values" --header 'Content-Type: application/json' --data-raw '{"index":"'$VALUE'"}'; echo " ("$VALUE")"
      sleep $PAUSE
    done
    ;;
  *)
    echo "$fg_bold[red]Error: Invalid option $OPTION$reset_color"
    usage
    ;;
esac
